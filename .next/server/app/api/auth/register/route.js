(()=>{var e={};e.id=2,e.ids=[2],e.modules={20399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},79348:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},30412:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},35405:(e,t,a)=>{"use strict";a.r(t),a.d(t,{patchFetch:()=>E,routeModule:()=>b,serverHooks:()=>m,workAsyncStorage:()=>y,workUnitAsyncStorage:()=>h});var r={};a.r(r),a.d(r,{OPTIONS:()=>u,POST:()=>d});var s=a(88797),n=a(10042),o=a(58492),i=a(59540),l=a(77345),c=a(78051);async function d(e){try{let t;let a=(await (0,c.headers)()).get("origin")||"*";try{t=await e.json()}catch(e){return new i.NextResponse(JSON.stringify({error:"Invalid JSON payload"}),{status:400,headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":a,"Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization"}})}let{email:r,password:s}=t;if(!r||!s)return i.NextResponse.json({error:"Email and password are required"},{status:400,headers:{"Access-Control-Allow-Origin":a,"Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization"}});let n=await l.EmbyService.createUser(r,s);return i.NextResponse.json(n,{headers:{"Access-Control-Allow-Origin":a,"Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization"}})}catch(e){return console.error("Registration error:",e),i.NextResponse.json({error:"Failed to create streaming account",details:e.message},{status:500,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization"}})}}async function u(e){return new i.NextResponse(null,{status:204,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization"}})}let b=new s.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/auth/register/route",pathname:"/api/auth/register",filename:"route",bundlePath:"app/api/auth/register/route"},resolvedPagePath:"/home/shan/Desktop/Shan/buzzplaymv/app/api/auth/register/route.ts",nextConfigOutput:"",userland:r}),{workAsyncStorage:y,workUnitAsyncStorage:h,serverHooks:m}=b;function E(){return(0,o.patchFetch)({workAsyncStorage:y,workUnitAsyncStorage:h})}},78031:()=>{},35303:()=>{},77345:(e,t,a)=>{"use strict";a.r(t),a.d(t,{EmbyService:()=>o});let r="http://167.172.75.130:8096",s="1eb680f1b18e46ce8fe6e778fe255c51";class n extends Error{constructor(e,t){super(e),this.statusCode=t,this.name="EmbyError"}}class o{static async fetchEmby(e,t={}){if(!r||!s)throw Error("Missing Emby configuration. Please check NEXT_PUBLIC_EMBY_URL and NEXT_PUBLIC_EMBY_API_KEY environment variables.");let a=`${r}/emby${e}`,o={"X-Emby-Token":s,"Content-Type":"application/json",...t.headers};try{let e=await fetch(a,{...t,headers:o});if(!e.ok){let t=await e.text();throw new n(`Emby API error (${e.status}): ${t}`,e.status)}return e}catch(e){throw console.error("Emby service error:",e),e}}static async createUser(e,t){try{let a=await this.fetchEmby("/Users/New",{method:"POST",body:JSON.stringify({Name:e})}),r=await a.json();if(!r||!r.Id)throw Error("Invalid response from Emby server");return await this.fetchEmby(`/Users/${r.Id}/Password`,{method:"POST",body:JSON.stringify({NewPw:t})}),await this.fetchEmby(`/Users/${r.Id}/Policy`,{method:"POST",body:JSON.stringify({IsAdministrator:!1,IsHidden:!1,IsDisabled:!0,EnableUserPreferenceAccess:!0,EnableRemoteAccess:!0,EnableLiveTvAccess:!0,EnableMediaPlayback:!0,EnableAudioPlaybackTranscoding:!0,EnableVideoPlaybackTranscoding:!0,EnablePlaybackRemuxing:!0,EnableContentDeletion:!1,EnableContentDownloading:!0,EnableSyncTranscoding:!0,EnableSubtitleDownloading:!0,EnableSubtitleManagement:!0,EnablePublicSharing:!1,RemoteClientBitrateLimit:0,AuthenticationProviderId:"Default",EnableAllDevices:!0,EnableAllChannels:!0,EnableAllFolders:!0,SimultaneousStreamLimit:3})}),await this.fetchEmby(`/Users/${r.Id}/Configuration`,{method:"POST",body:JSON.stringify({AudioLanguagePreference:"eng",PlayDefaultAudioTrack:!0,SubtitleLanguagePreference:"eng",DisplayMissingEpisodes:!1,SubtitleMode:"Default",EnableLocalPassword:!0,OrderedViews:[],LatestItemsExcludes:[],MyMediaExcludes:[],HidePlayedInLatest:!0,RememberAudioSelections:!0,RememberSubtitleSelections:!0,EnableNextEpisodeAutoPlay:!0})}),r}catch(e){throw console.error("Error creating Emby user:",e),e}}static async getUserStatus(e){try{let t=await this.fetchEmby(`/Users/${e}`),a=await t.json();return!a.Policy?.IsDisabled}catch(e){throw console.error("Error getting user status:",e),new n("Failed to get user status")}}static async updateUserPolicy(e,t,a=2,r=108e7){await this.fetchEmby(`/Users/${e}/Policy`,{method:"POST",body:JSON.stringify({IsAdministrator:!1,IsDisabled:!t,EnableRemoteAccess:t,EnableMediaPlayback:t,EnableAudioPlaybackTranscoding:t,EnableVideoPlaybackTranscoding:t,EnablePlaybackRemuxing:t,EnableContentDownloading:t,EnableSyncTranscoding:t,EnableSubtitleDownloading:t,EnableSubtitleManagement:t,EnablePublicSharing:!1,EnableAllDevices:t,EnableAllChannels:t,EnableAllFolders:t,SimultaneousStreamLimit:t?a:0,RemoteClientBitrateLimit:r,MaxStreamingBitrate:r,MaxStaticBitrate:r,MaxStaticRemoteQuality:r,QualityOptions:{MaxStreamingBitrate:r,MaxStaticBitrate:r,MaxStaticRemoteQuality:r,EnableAudioPlaybackTranscoding:!0,EnableVideoPlaybackTranscoding:!0,EnablePlaybackRemuxing:!0}})})}static async deleteUser(e){await this.fetchEmby(`/Users/${e}`,{method:"DELETE"})}static async updatePassword(e,t){await this.fetchEmby(`/Users/${e}/Password`,{method:"POST",body:JSON.stringify({NewPw:t})})}}}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[492,661,51],()=>a(35405));module.exports=r})();