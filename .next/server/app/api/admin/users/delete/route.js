(()=>{var e={};e.id=708,e.ids=[708],e.modules={20399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},79348:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},30412:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3263:e=>{"use strict";e.exports=import("firebase-admin/app")},79637:e=>{"use strict";e.exports=import("firebase-admin/auth")},72929:e=>{"use strict";e.exports=import("firebase-admin/firestore")},12231:(e,t,r)=>{"use strict";r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{patchFetch:()=>c,routeModule:()=>d,serverHooks:()=>b,workAsyncStorage:()=>u,workUnitAsyncStorage:()=>m});var a=r(88797),n=r(10042),o=r(58492),i=r(67451),l=e([i]);i=(l.then?(await l)():l)[0];let d=new a.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/admin/users/delete/route",pathname:"/api/admin/users/delete",filename:"route",bundlePath:"app/api/admin/users/delete/route"},resolvedPagePath:"/home/shan/Desktop/Shan/buzzplaymv/app/api/admin/users/delete/route.ts",nextConfigOutput:"",userland:i}),{workAsyncStorage:u,workUnitAsyncStorage:m,serverHooks:b}=d;function c(){return(0,o.patchFetch)({workAsyncStorage:u,workUnitAsyncStorage:m})}s()}catch(e){s(e)}})},78031:()=>{},35303:()=>{},67451:(e,t,r)=>{"use strict";r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{OPTIONS:()=>u,POST:()=>d,dynamic:()=>b,runtime:()=>m});var a=r(59540),n=r(77345),o=r(79637),i=r(96424),l=r(78051),c=e([o,i]);[o,i]=c.then?(await c)():c;let m="nodejs",b="force-dynamic";async function d(e){try{let t=(0,l.cookies)(),r=(await t).get("adminLoggedIn")?.value;if(!r||"true"!==r)return a.NextResponse.json({error:"Unauthorized"},{status:401});let{userId:s,embyUserId:c}=await e.json();if(console.log("Attempting to delete user:",{userId:s,embyUserId:c}),!s||!c)return a.NextResponse.json({error:"Missing user IDs"},{status:400});console.log("Checking user in Firestore:",s);let d=i.adminDb.collection("users").doc(s),u=await d.get();if(!u.exists)return console.log("User document not found in Firestore"),a.NextResponse.json({error:"User not found in database"},{status:404});console.log("Found user document:",u.data()),console.log("Deleting from Firestore...");try{let e=await d.collection("receipts").get();if(!e.empty){let t=i.adminDb.batch();e.docs.forEach(e=>{t.delete(e.ref)}),await t.commit(),console.log("Deleted receipts subcollection")}await d.delete(),console.log("Successfully deleted user document from Firestore")}catch(e){throw console.error("Error deleting from Firestore:",e),e}console.log("Deleting from Firebase Auth...");try{await (0,o.getAuth)().deleteUser(s),console.log("Successfully deleted from Firebase Auth")}catch(e){"auth/user-not-found"!==e.code&&console.error("Error deleting from Firebase Auth:",e)}console.log("Deleting from Emby...");try{await n.EmbyService.deleteUser(c),console.log("Successfully deleted from Emby")}catch(e){console.error("Error deleting from Emby:",e)}return console.log("User deletion completed"),a.NextResponse.json({success:!0,message:"User deleted successfully"})}catch(e){return console.error("Error in delete user route:",e),a.NextResponse.json({error:e.message||"Failed to delete user"},{status:500})}}async function u(e){return a.NextResponse.json({},{status:200})}s()}catch(e){s(e)}})},96424:(e,t,r)=>{"use strict";r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{adminDb:()=>c,setAdminClaim:()=>l});var a=r(3263),n=r(72929),o=r(79637),i=e([a,n,o]);[a,n,o]=i.then?(await i)():i,(0,a.getApps)().length||(0,a.initializeApp)({credential:(0,a.cert)({projectId:process.env.FIREBASE_PROJECT_ID,clientEmail:process.env.FIREBASE_CLIENT_EMAIL,privateKey:process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g,"\n")})});let c=(0,n.getFirestore)();async function l(e){try{return await (0,o.getAuth)().setCustomUserClaims(e,{admin:!0}),!0}catch(e){return console.error("Error setting admin claim:",e),!1}}s()}catch(e){s(e)}})},77345:(e,t,r)=>{"use strict";r.r(t),r.d(t,{EmbyService:()=>o});let s="http://167.172.75.130:8096",a="1eb680f1b18e46ce8fe6e778fe255c51";class n extends Error{constructor(e,t){super(e),this.statusCode=t,this.name="EmbyError"}}class o{static async fetchEmby(e,t={}){if(!s||!a)throw Error("Missing Emby configuration. Please check NEXT_PUBLIC_EMBY_URL and NEXT_PUBLIC_EMBY_API_KEY environment variables.");let r=`${s}/emby${e}`,o={"X-Emby-Token":a,"Content-Type":"application/json",...t.headers};try{let e=await fetch(r,{...t,headers:o});if(!e.ok){let t=await e.text();throw new n(`Emby API error (${e.status}): ${t}`,e.status)}return e}catch(e){throw console.error("Emby service error:",e),e}}static async createUser(e,t){try{let r=await this.fetchEmby("/Users/New",{method:"POST",body:JSON.stringify({Name:e})}),s=await r.json();if(!s||!s.Id)throw Error("Invalid response from Emby server");return await this.fetchEmby(`/Users/${s.Id}/Password`,{method:"POST",body:JSON.stringify({NewPw:t})}),await this.fetchEmby(`/Users/${s.Id}/Policy`,{method:"POST",body:JSON.stringify({IsAdministrator:!1,IsHidden:!1,IsDisabled:!0,EnableUserPreferenceAccess:!0,EnableRemoteAccess:!0,EnableLiveTvAccess:!0,EnableMediaPlayback:!0,EnableAudioPlaybackTranscoding:!0,EnableVideoPlaybackTranscoding:!0,EnablePlaybackRemuxing:!0,EnableContentDeletion:!1,EnableContentDownloading:!0,EnableSyncTranscoding:!0,EnableSubtitleDownloading:!0,EnableSubtitleManagement:!0,EnablePublicSharing:!1,RemoteClientBitrateLimit:0,AuthenticationProviderId:"Default",EnableAllDevices:!0,EnableAllChannels:!0,EnableAllFolders:!0,SimultaneousStreamLimit:3})}),await this.fetchEmby(`/Users/${s.Id}/Configuration`,{method:"POST",body:JSON.stringify({AudioLanguagePreference:"eng",PlayDefaultAudioTrack:!0,SubtitleLanguagePreference:"eng",DisplayMissingEpisodes:!1,SubtitleMode:"Default",EnableLocalPassword:!0,OrderedViews:[],LatestItemsExcludes:[],MyMediaExcludes:[],HidePlayedInLatest:!0,RememberAudioSelections:!0,RememberSubtitleSelections:!0,EnableNextEpisodeAutoPlay:!0})}),s}catch(e){throw console.error("Error creating Emby user:",e),e}}static async getUserStatus(e){try{let t=await this.fetchEmby(`/Users/${e}`),r=await t.json();return!r.Policy?.IsDisabled}catch(e){throw console.error("Error getting user status:",e),new n("Failed to get user status")}}static async updateUserPolicy(e,t,r=2,s=108e7){await this.fetchEmby(`/Users/${e}/Policy`,{method:"POST",body:JSON.stringify({IsAdministrator:!1,IsDisabled:!t,EnableRemoteAccess:t,EnableMediaPlayback:t,EnableAudioPlaybackTranscoding:t,EnableVideoPlaybackTranscoding:t,EnablePlaybackRemuxing:t,EnableContentDownloading:t,EnableSyncTranscoding:t,EnableSubtitleDownloading:t,EnableSubtitleManagement:t,EnablePublicSharing:!1,EnableAllDevices:t,EnableAllChannels:t,EnableAllFolders:t,SimultaneousStreamLimit:t?r:0,RemoteClientBitrateLimit:s,MaxStreamingBitrate:s,MaxStaticBitrate:s,MaxStaticRemoteQuality:s,QualityOptions:{MaxStreamingBitrate:s,MaxStaticBitrate:s,MaxStaticRemoteQuality:s,EnableAudioPlaybackTranscoding:!0,EnableVideoPlaybackTranscoding:!0,EnablePlaybackRemuxing:!0}})})}static async deleteUser(e){await this.fetchEmby(`/Users/${e}`,{method:"DELETE"})}static async updatePassword(e,t){await this.fetchEmby(`/Users/${e}/Password`,{method:"POST",body:JSON.stringify({NewPw:t})})}}}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[492,661,51],()=>r(12231));module.exports=s})();